!function(a,b){"use strict";!function(){try{if(!console&&"undefined"!=typeof window){window.console||(window.console={});for(var a=["log","info","warn","error","debug","trace","dir","group","groupCollapsed","groupEnd","time","timeEnd","profile","profileEnd","dirxml","assert","count","markTimeline","timeStamp","clear"],b=0;b<a.length;b++)window.console[a[b]]||(window.console[a[b]]=function(){})}}catch(c){}}(),"function"==typeof define&&define.amd?define(b):"undefined"!=typeof exports?module.exports=b():a.UISettingsManager=b()}(this,function(){"use strict";var a=function(b){if(!(this instanceof a))return new a(b);var c=b||new TemplateManager,d=function(a){var b=jQuery("[data-setting-name="+a+"]"),c=b.length,d=b;return 0===c?(console.warn("No UI elements found for",a),d=null):c>1&&(console.warn("Multiple UI elements found for",a),d=null),d},e=function(a,b){console.warn("Could not manipulate setting",a,b,"because no matching UI element is present in the DOM")},f=function(a,b){var c=d(a);null!==c?c.val(b):e(a,b)},g=function(a,b){var c=d(a);null!==c?"checkbox"===c[0].type?c.prop("checked",b):f(a,b):e(a,b)},h=function(a,b){f(a,b)},i=function(a,b){var c=d(a);c.find("[data-setting-object-member]").each(function(a,c){var d=$(c),e=d.data("setting-object-member");d.val(b[e])})},j=function(a,b){var e,f,g=d(a),h=g.data("template-name"),i=c.get(h);$.each(b,function(a,b){var c=[];$.each(b,function(a,b){c.push({regex:a,replacement:b})}),e=i.process(c),f=$(e),g.append(f),f.find("[data-setting-object-member]").each(function(a,c){var d=$(c),e=d.data("setting-object-member");d.val(b[e])})})},k=function(a){var b={};return a.find("[data-setting-object-member]").each(function(a,c){var d=$(c),e=d.data("setting-object-member"),f=d.data("setting-object-member-validate"),g=d,h=g.val();e&&0!==e.trim().length&&("empty(value):ignore"===f?h&&0!==h.trim().length&&(b[e]=h):b[e]=h)}),b},l=function(a){var b=a.data("setting-name"),c=a.val();if("boolean"===a.data("setting-type")||"bool"===a.data("setting-type")||"checkbox"===a[0].type)c="checkbox"===a[0].type?a.is(":checked"):"true"===a.val().toLowerCase();else if("number"===a.data("setting-type")||"number"===a[0].type)c=parseInt(a.val());else if("string"===a.data("setting-type")||"text"===a[0].type)c=a.val();else if("object"===a.data("setting-type"))c=k(a);else if("objectarray"===a.data("setting-type")){var d=[],e=a.find("[data-setting-object-element]");e.each(function(a,b){var c=jQuery(b),e=c.data("setting-object-member-validate"),f=k(c);"empty(object):ignore"===e?0!==Object.getOwnPropertyNames(f).length&&d.push(f):d.push(f)}),c=d}else console.warn("Unknown data type for setting",b,c),c=a.val();return c},m=function(){var a={};return jQuery("[data-setting-name]").each(function(b,c){var d=jQuery(c),e=d.data("setting-name"),f=l(d);a[e]=f}),a},n=function(a){jQuery.each(a,function(a,b){"boolean"==typeof b?g(a,b):jQuery.isArray(b)?j(a,b):jQuery.isNumeric(b)?h(a,b):"string"==typeof b?f(a,b):"object"==typeof b?i(a,b):console.error("Unknown setting type",a,b,typeof b)})};return{getSettingsFromUI:m,putSettingsIntoUI:n}};return a.version="2.0.2",a});
//# sourceMappingURL=UISettingsManager.min.js.map