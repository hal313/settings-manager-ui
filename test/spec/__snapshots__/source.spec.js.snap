// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SettingsManagerUI API getSettings should get an array 1`] = `

<div id="root"
     data-setting-container
     data-setting-type="object"
     class
>
  <div name="people"
       data-setting-container
       data-setting-name="people"
       data-setting-fully-qualified-name="people"
       data-setting-type="collection:object"
       class
  >
    <div name="people[0]"
         data-setting-container
         class
         data-setting-fully-qualified-name="people.people[0]"
         data-setting-type="object:default"
         data-setting-name="people[0]"
         data-setting-index="0"
         data-setting-value-container
    >
      <input name="name"
             type="text"
             value="John"
             data-setting-fully-qualified-name="people.people[0].name"
             data-setting-type="string:text"
             data-setting-name="name"
      >
    </div>
    <div name="people[1]"
         data-setting-container
         class
         data-setting-fully-qualified-name="people.people[1]"
         data-setting-type="object:default"
         data-setting-name="people[1]"
         data-setting-index="1"
         data-setting-value-container
    >
      <input name="name"
             type="text"
             value="David"
             data-setting-fully-qualified-name="people.people[1].name"
             data-setting-type="string:text"
             data-setting-name="name"
      >
    </div>
    <div name="people[2]"
         data-setting-container
         class
         data-setting-fully-qualified-name="people.people[2]"
         data-setting-type="object:default"
         data-setting-name="people[2]"
         data-setting-index="2"
         data-setting-value-container
    >
      <input name="name"
             type="text"
             value="Jennifer"
             data-setting-fully-qualified-name="people.people[2].name"
             data-setting-type="string:text"
             data-setting-name="name"
      >
    </div>
  </div>
</div>

`;

exports[`SettingsManagerUI API setSettings should set a basic object 1`] = `

<div id="root"
     data-setting-type="object:default"
     data-setting-container
     class
>
  <input name="stringValue"
         type="text"
         value="hello world!"
         data-setting-fully-qualified-name="stringValue"
         data-setting-type="string:text"
         data-setting-name="stringValue"
  >
  <input name="numberValue"
         type="number"
         value="101"
         data-setting-fully-qualified-name="numberValue"
         data-setting-type="number:number"
         data-setting-name="numberValue"
  >
  <input type="checkbox"
         name="booleanValue"
         value="true"
         data-setting-fully-qualified-name="booleanValue"
         data-setting-type="boolean:checkbox"
         data-setting-name="booleanValue"
  >
  <div name="nullValue"
       value="null"
       data-setting-fully-qualified-name="nullValue"
       data-setting-type="null"
       data-setting-name="nullValue"
  >
  </div>
  <div name="undefinedValue"
       value="undefined"
       data-setting-fully-qualified-name="undefinedValue"
       data-setting-type="undefined"
       data-setting-name="undefinedValue"
  >
  </div>
</div>

`;

exports[`SettingsManagerUI API setSettings should set a deeply nested object 1`] = `

<div id="root"
     data-setting-type="object:default"
     data-setting-container
     class
>
  <input name="stringValue"
         type="text"
         value="hello world!"
         data-setting-fully-qualified-name="stringValue"
         data-setting-type="string:text"
         data-setting-name="stringValue"
  >
  <input name="numberValue"
         type="number"
         value="101"
         data-setting-fully-qualified-name="numberValue"
         data-setting-type="number:number"
         data-setting-name="numberValue"
  >
  <input type="checkbox"
         name="booleanValue"
         value="true"
         data-setting-fully-qualified-name="booleanValue"
         data-setting-type="boolean:checkbox"
         data-setting-name="booleanValue"
  >
  <div name="objectValue"
       data-setting-container
       class
       data-setting-fully-qualified-name="objectValue"
       data-setting-type="object:default"
       data-setting-name="objectValue"
  >
    <input name="nestedStringValue"
           type="text"
           value="another string value"
           data-setting-fully-qualified-name="objectValue.nestedStringValue"
           data-setting-type="string:text"
           data-setting-name="nestedStringValue"
    >
    <div name="nestedObjectValue"
         data-setting-container
         class
         data-setting-fully-qualified-name="objectValue.nestedObjectValue"
         data-setting-type="object:default"
         data-setting-name="nestedObjectValue"
    >
      <input name="nestedNestedStringValue"
             type="text"
             value="yet another string value"
             data-setting-fully-qualified-name="objectValue.nestedObjectValue.nestedNestedStringValue"
             data-setting-type="string:text"
             data-setting-name="nestedNestedStringValue"
      >
      <div name="nestedNestedObjectValue"
           data-setting-container
           class
           data-setting-fully-qualified-name="objectValue.nestedObjectValue.nestedNestedObjectValue"
           data-setting-type="object:default"
           data-setting-name="nestedNestedObjectValue"
      >
        <input name="nestedNestedStringValue"
               type="text"
               value="still another string value"
               data-setting-fully-qualified-name="objectValue.nestedObjectValue.nestedNestedObjectValue.nestedNestedStringValue"
               data-setting-type="string:text"
               data-setting-name="nestedNestedStringValue"
        >
      </div>
      <input type="checkbox"
             name="name"
             value="false"
             data-setting-fully-qualified-name="objectValue.nestedObjectValue.name"
             data-setting-type="boolean:checkbox"
             data-setting-name="name"
      >
    </div>
    <div name="onelevelname"
         data-setting-container
         class
         data-setting-fully-qualified-name="objectValue.onelevelname"
         data-setting-type="object:default"
         data-setting-name="onelevelname"
    >
    </div>
  </div>
  <input name="toplevel"
         type="text"
         value="toplevel"
         data-setting-fully-qualified-name="toplevel"
         data-setting-type="string:text"
         data-setting-name="toplevel"
  >
</div>

`;

exports[`SettingsManagerUI API setSettings should set a nested object 1`] = `

<div id="root"
     data-setting-type="object:default"
     data-setting-container
     class
>
  <input name="stringValue"
         type="text"
         value="top level string value"
         data-setting-fully-qualified-name="stringValue"
         data-setting-type="string:text"
         data-setting-name="stringValue"
  >
  <input name="numberValue"
         type="number"
         value="101"
         data-setting-fully-qualified-name="numberValue"
         data-setting-type="number:number"
         data-setting-name="numberValue"
  >
  <input type="checkbox"
         name="booleanValue"
         value="true"
         data-setting-fully-qualified-name="booleanValue"
         data-setting-type="boolean:checkbox"
         data-setting-name="booleanValue"
  >
  <div name="objectValue"
       data-setting-container
       class
       data-setting-fully-qualified-name="objectValue"
       data-setting-type="object:default"
       data-setting-name="objectValue"
  >
    <input name="nestedStringValue"
           type="text"
           value="nested string value"
           data-setting-fully-qualified-name="objectValue.nestedStringValue"
           data-setting-type="string:text"
           data-setting-name="nestedStringValue"
    >
  </div>
  <input name="anotherStringValue"
         type="text"
         value="another top level string value"
         data-setting-fully-qualified-name="anotherStringValue"
         data-setting-type="string:text"
         data-setting-name="anotherStringValue"
  >
</div>

`;

exports[`SettingsManagerUI API setSettings should set an array 1`] = `

<div id="root"
     data-setting-type="object:default"
     data-setting-container
     class
>
  <div name="people"
       data-setting-container
       data-setting-name="people"
       data-setting-fully-qualified-name="people"
       data-setting-type="collection:object"
  >
    <div name="people[0]"
         data-setting-container
         class
         data-setting-fully-qualified-name="people.people[0]"
         data-setting-type="object:default"
         data-setting-name="people[0]"
         data-setting-index="0"
         data-setting-value-container
    >
      <input name="name"
             type="text"
             value="John"
             data-setting-fully-qualified-name="people.people[0].name"
             data-setting-type="string:text"
             data-setting-name="name"
      >
    </div>
    <div name="people[1]"
         data-setting-container
         class
         data-setting-fully-qualified-name="people.people[1]"
         data-setting-type="object:default"
         data-setting-name="people[1]"
         data-setting-index="1"
         data-setting-value-container
    >
      <input name="name"
             type="text"
             value="David"
             data-setting-fully-qualified-name="people.people[1].name"
             data-setting-type="string:text"
             data-setting-name="name"
      >
    </div>
    <div name="people[2]"
         data-setting-container
         class
         data-setting-fully-qualified-name="people.people[2]"
         data-setting-type="object:default"
         data-setting-name="people[2]"
         data-setting-index="2"
         data-setting-value-container
    >
      <input name="name"
             type="text"
             value="Jennifer"
             data-setting-fully-qualified-name="people.people[2].name"
             data-setting-type="string:text"
             data-setting-name="name"
      >
    </div>
  </div>
</div>

`;
